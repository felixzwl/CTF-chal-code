'''
  v8 = 854698492143LL;
  v9 = 880468295913LL;
  v10 = 597000454391LL;
  v11 = 605590388953LL;
  v12 = 932007903423LL;
  v13 = 760209211613LL;
  v14 = 579820585151LL;
  v15 = 940597838039LL;
  v16 = 191;
  while ( 1 )
  {
    v5 = v23;
    v17[v5] = getch();
    if ( !v17[v5] || v17[v23] == 10 )
      break;
    if ( v17[v23] == 8 )
    {
      printf("\b\b", v8, v9, v10, v11, v12, v13, v14, v15, *(_QWORD *)&v16);
      --v23;
    }
    else
    {
      putchar(v17[v23++]);
    }
  }
  v24 = 0;
  if ( v23 != 22 )
    v24 = 1;
  for ( j = 0; j <= 16; ++j )
  {
    if ( v17[j] != (*((_DWORD *)&v8 + j) - 1) / 2 )
    {
      v24 = 1;
      argv = (const char **)((*((_DWORD *)&v8 + j) - 1) / 2);
      printf("%d", argv, v8, v9, v10, v11, v12, v13, v14, v15, *(_QWORD *)&v16);
    }
  }
  if ( v18 != 48 || v19 != 56 || v20 != 50 || v21 != 51 || v22 != 125 )
    v24 = 1;
  v17[v23] = 0;
  puts("\r");
  if ( v24 )
  {
    puts("u r wrong\r\n\r");
    main(4197152, argv, v6);
  }
  else
  {
    puts("u r right!\r");
  }
'''
lst=[854698492143, 880468295913, 597000454391, 605590388953, 932007903423, 760209211613, 579820585151, 940597838039, 191]
